{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","intervalId","setInterval","date","setState","console","log","prevProps","props","name","clearInterval","className","React","Component","App","isClockVisible","clockName","showClock","hideClock","randomName","Math","ceil","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,WAAaC,aAAY,WAC5B,IAAMC,EAAO,IAAIL,KAEjB,EAAKM,SAAS,CAAEP,KAAMM,EAAKJ,uBAE3BM,QAAQC,IAAI,EAAKV,MAAMC,QACtB,OAZP,gCAeE,SAAmBU,GACDP,KAAKQ,MAAMC,OACVF,EAAUE,MAIzBJ,QAAQC,IAAR,qCACgCC,EAAUE,KAD1C,eACqDT,KAAKQ,MAAMC,SAtBtE,kCA2BE,WACEC,cAAcV,KAAKC,cA5BvB,oBA+BE,WACE,OACE,0BAAMU,UAAU,eAAeX,KAAKJ,MAAMC,UAjChD,GAA2Be,IAAMC,YC8DlBC,E,4MA5DblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKb,SAAS,CACZW,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKd,SAAS,CACZW,gBAAgB,K,EAIpBI,WAAa,WACX,EAAKf,SAAS,CACZY,UAAU,GAAD,OAAKI,KAAKC,KAAqB,IAAhBD,KAAKE,c,4CAIjC,WACE,MAAsCtB,KAAKJ,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKL,UAAU,WACb,2CAEA,uBAAGA,UAAU,WAAb,gBAEGI,GAAkB,kBAAC,EAAD,CAAON,KAAMO,KAGlC,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,cAOA,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,WAFhB,cAOA,4BACEK,KAAK,SACLC,QAASxB,KAAKmB,YAFhB,wB,GAlDUP,IAAMC,WCAxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fffe1ac9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.time)\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const newName = this.props.name;\n    const prevName = prevProps.name;\n\n    if (newName !== prevName) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n      <span className=\"clock__time\">{this.state.time}</span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  randomName = () => {\n    this.setState({\n      clockName: `${Math.ceil(Math.random() * 777)}`,\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"content\">\n        <h1>React clock</h1>\n\n        <p className=\"current\">\n          Current time:\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.randomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}